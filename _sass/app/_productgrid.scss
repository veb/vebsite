@mixin grid-item-columns($columns) {
  width: (100% / 12) * $columns;
}

.grid-items {
  $grid-items-background: $base-background-color;
  $grid-item-background: desaturate($base-accent-color, 30); 
  $grid-images: 
    '/assets/images/gridicons/therable.png',
    '/assets/images/gridicons/booky.png',
    '/assets/images/gridicons/duets.png',
    '/assets/images/gridicons/lick.png',
    '/assets/images/gridicons/mode.png',
    '/assets/images/gridicons/mexicam.png',
    '/assets/images/gridicons/poop.png',
    '/assets/images/gridicons/makatimap.png';
  
  $grid-item-border-size: 9px;
  $grid-item-columns: 4;
  $grid-item-big-columns: 8;
  $grid-item-color: white;
  $grid-item-height: 14em;

  @include clearfix;
    
  .grid-item {
    @include transition (all 0.2s ease-in-out);
    height: $grid-item-height;
    background: $grid-item-background;
    width: 100%;
    overflow: hidden;
    float: left;
    padding: 2em;
    border-top: 0;
    border-bottom: $grid-item-border-size solid $grid-items-background;
    border-left: $grid-item-border-size /2 solid $grid-items-background;
    border-right: $grid-item-border-size /2 solid $grid-items-background;
    text-align: center;
    cursor: pointer;
    @include position( relative, 0px 0 0 0px );

    @include media($large-screen) {
      @include grid-item-columns($grid-item-columns);
    }

    @for $i from 1 to 9 { 
// assign colors from $grid-item-colors list
      &:nth-child(#{$i}) {
        background: 
            linear-gradient(
              rgba(64, 64, 64, 0.45), 
              rgba(64, 64, 64, 0.45)
            ),
            url(nth($grid-images, $i));
        background-repeat: no-repeat;
        background-position: center;
        background-size: cover;
        &:hover {
          background: 
            linear-gradient(
              rgba(64, 64, 64, 0.65), 
              rgba(64, 64, 64, 0.65)
            ),
            /* bottom, image */
            url(nth($grid-images, $i));
          background-repeat: no-repeat;
          background-position: center;
          background-size: cover;
        }
      }
    }
  }

  .ribbon-wrapper {
    $ribbon-size: 85px;
    $ribbon-background: $base-accent-color;
    @include size($ribbon-size);
    overflow: hidden;
    position: absolute;
    top: -1px;
    right: -1px;

    .ribbon {
      font-size: .8em;
      font-weight: 800;
      text-align: center;
      @include transform(rotate(45deg));
      position: relative;
      padding: 2px 7px;
      left: -5px;
      top: 15px;
      width: 120px;
      background-color: $ribbon-background;
      color: white;
      box-shadow: 0px 0px 3px rgba(0,0,0,0.3);
    }

    .ribbon-android {
      background-color: #A4C639;
    }

    .ribbon-ios {
      background-color: #666;
    }

    .ribbon-web {
      background-color: $base-accent-color;
    }
  }


  

  .grid-item img {
      display: block;
      height: 3em;
      margin: auto;
      margin-bottom: 1em;
      @include border-top-radius(10px);
      @include border-bottom-radius(10px);
      @include border-left-radius(10px);
      @include border-right-radius(10px);

    }

  .grid-item h1 {
      color: $grid-item-color;
      font-size: 1.3em;
      margin-bottom: .4em;
    }

  .grid-item p {
      margin: auto;
      color: transparentize($grid-item-color, .3);
      @include media($medium-screen) {
        max-width: 70%;
      }
    }

  .grid-item-big {
    @include media($large-screen) {
      @include grid-item-columns($grid-item-big-columns);
    }
    p {
      @include media($medium-screen) {
        max-width: 60%;
      }  
    }
  }
}
